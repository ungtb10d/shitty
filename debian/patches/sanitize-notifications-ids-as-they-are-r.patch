From: Kovid Goyal <kovid@ungtb10d.net>
Date: Mon, 5 Sep 2022 10:41:19 +0530
X-Dgit-Generated: 0.21.2-2 29aceae9dbac252769bc39d12619a7e63b62afcc
Subject: Sanitize notifications ids as they are retransmitted over the TTY

(cherry picked from commit f05783e64d5fa62e1aed603e8d69aced5e49824f)

---

diff --git a/shitty/notify.py b/shitty/notify.py
index 2ff48b6ee..3a4a8813d 100644
--- a/shitty/notify.py
+++ b/shitty/notify.py
@@ -2,13 +2,15 @@
 # vim:fileencoding=utf-8
 # License: GPLv3 Copyright: 2019, Kovid Goyal <kovid at ungtb10d.net>
 
+import re
 from base64 import standard_b64decode
 from collections import OrderedDict
 from itertools import count
-from typing import Dict, Optional, Callable
+from typing import Callable, Dict, Optional
 
 from .constants import is_macos, logo_png_file
 from .fast_data_types import get_boss
+from .types import run_once
 from .utils import log_error
 
 if is_macos:
@@ -75,6 +77,11 @@ def parse_osc_9(raw: str) -> NotificationCommand:
     return ans
 
 
+@run_once
+def sanitize_identifier_pat() -> 're.Pattern[str]':
+    return re.compile(r'[^a-zA-Z0-9-_+.]+')
+
+
 def parse_osc_99(raw: str) -> NotificationCommand:
     cmd = NotificationCommand()
     metadata, payload = raw.partition(';')[::2]
@@ -90,7 +97,7 @@ def parse_osc_99(raw: str) -> NotificationCommand:
             if k == 'p':
                 payload_type = v
             elif k == 'i':
-                cmd.identifier = v
+                cmd.identifier = sanitize_identifier_pat().sub('', v)
             elif k == 'e':
                 payload_is_encoded = v == '1'
             elif k == 'd':
diff --git a/shitty/window.py b/shitty/window.py
index d7889e504..f1a5419a8 100644
--- a/shitty/window.py
+++ b/shitty/window.py
@@ -34,7 +34,7 @@
     update_window_title, update_window_visibility, viewport_for_window
 )
 from .keys import keyboard_mode_name
-from .notify import NotificationCommand, handle_notification_cmd
+from .notify import NotificationCommand, handle_notification_cmd, sanitize_identifier_pat
 from .options.types import Options
 from .rgb import to_color
 from .terminfo import get_capabilities
@@ -712,6 +712,7 @@ def report_color(self, code: str, r: int, g: int, b: int) -> None:
         self.screen.send_escape_code_to_child(OSC, '{};rgb:{:04x}/{:04x}/{:04x}'.format(code, r, g, b))
 
     def report_notification_activated(self, identifier: str) -> None:
+        identifier = sanitize_identifier_pat().sub('', identifier)
         self.screen.send_escape_code_to_child(OSC, f'99;i={identifier};')
 
     def set_dynamic_color(self, code: int, value: Union[str, bytes]) -> None:
diff --git a/shitty_tests/datatypes.py b/shitty_tests/datatypes.py
index 26430fb51..b1fe200a3 100644
--- a/shitty_tests/datatypes.py
+++ b/shitty_tests/datatypes.py
@@ -507,3 +507,7 @@ def test_ansi_repr(self):
         a = []
         hb.as_ansi(a.append)
         self.ae(a, [str(hb.line(i)) + '\n' for i in range(hb.count - 1, -1, -1)])
+
+    def test_notify_identifier_sanitization(self):
+        from shitty.notify import sanitize_identifier_pat
+        self.ae(sanitize_identifier_pat().sub('', '\x1b\nabc\n[*'), 'abc')
